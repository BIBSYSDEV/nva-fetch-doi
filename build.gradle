plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'nebula.lint' version '16.8.0'
}

gradleLint.rules = ['all-dependency']


group 'no.unit.nva'
version '1.0-SNAPSHOT'


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

def jacksonVersion = '2.10.2'
def problemVersion = '0.24.0'
def jupiterVersion = '5.5.2'
def hamcrestVersion = '2.2'

dependencies {
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
    implementation(group: 'org.zalando', name: 'problem', version: problemVersion) {
        compileOnly(group: 'org.apiguardian', name: 'apiguardian-api', version: '1.1.0') {
            because 'Dependency has maven scope provided'
        }
    }
    implementation group: 'org.zalando', name: 'jackson-datatype-problem', version: problemVersion
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.11'

    implementation group: 'com.github.BIBSYSDEV', name: 'nva-doi-transformer', version: 'v1.7'
    implementation group: 'com.github.BIBSYSDEV', name: 'nva-datamodel-java', version: 'v0.8.1'

    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: hamcrestVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: jupiterVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jupiterVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    failFast = true
}


jacocoTestReport {
    reports {
        xml.enabled true
    }
}

pmd {
    ruleSetConfig = rootProject.resources.text.fromFile('config/pmd/ruleset.xml')
    ruleSets = []
    ignoreFailures = false
}

checkstyle {
    configFile = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml').asFile()
    showViolations = true
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet rootProject.resources.text.fromFile('config/checkstyle/checkstyle-simple.xsl')
    }
}